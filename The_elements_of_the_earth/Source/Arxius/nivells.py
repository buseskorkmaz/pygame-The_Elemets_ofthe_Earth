import pygame
from Source.Arxius.background import Background
from Source.Arxius import levels
from Source.Arxius import enemy1
from Source.Arxius import sprite_sheets
from Source.Arxius import background
 
class Level():
 
    def __init__(self):
        """ Constructor. Pass in a handle to player. Needed for when moving platforms
            collide with the player. """
 

        self.platform_list = None
        self.enemy_list = None
 
 
 
        self.world_shift = 0
        self.level_limit = -1000
        self.platform_list = pygame.sprite.Group()
        self.enemy_list = pygame.sprite.Group()
        self.bg_list= pygame.sprite.Group()

         

    def update_plat(self):
        self.platform_list.update()
    def update_ene(self):
        self.enemy_list.update()
    def update_bg(self):
        self.bg_list.update()
 
    def draw_plat(self, screen):
        self.platform_list.draw(screen)
        
    def draw_ene(self,screen):
        self.enemy_list.draw(screen)

    def draw_bg(self,screen):
        self.bg_list.draw(screen)

 
    def shift_world(self, shift_x):
        
        self.world_shift += shift_x
        for platform in self.platform_list:
            platform.rect.x += shift_x


 


class Level_01(Level):
    """ Definition for level 1. """
 
    def __init__(self):
        """ Create level 1. """
 
        # Call the parent constructor
        Level.__init__(self)
 

        self.level_limit = -2500
 
        # Array with type of platform, and x, y location of the platform.
        im_grass = "Source/Imatges/gr1.png"
        im_dirt = "Source/Imatges/dr1.png"
        im_stone = "Source/Imatges/st.png"
        im_grass2 = "Source/Imatges/gr2.png"
        mapa=[
            [(0),(0),(0),(0),(0),(3),(3),(3),(3),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(3),(3),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(3),(0),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(1),(1),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(2),(2),(2),(1),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(1),(1),(1),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(2),(2),(2),(2),(2),(1),(0),(0),(0),(0),(0),(0),(0),(1),(1),(1),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(1),(1),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(1),(1),(1),(0),(0),(0),(0),(0),(1),(2),(1),(0),(0),(0),(0),(0),(0),(1),(0),(0),(0),(0),(0)],

            [(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(3),(3),(3),(3),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(3),(3),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(1),(1),(1),(1),(1),(1),(1),(0),(0),(0),(1),(2),(2),(2),(2),(1),(0),(0),(0),(3),(3),(3),(3),(3),(0),(0),(0),(0),(3),(3),(3),(0),(0),(0),(0)],

            [(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(3),(3),(3),(3),(3),(3),(3),(3),(3),(3),(1),(1),(1),(1),(1),(0),(0),(0),(3),(1),(1),(1),(1),(1),(1),(1),(1),(1),(1),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(2),(2),(2),(2),(2),(2),(1),(0),(0),(0),(0),(0),(0),(0),(0),(0),(1),(1),(2),(2),(2),(1),(1),(1),(1)],
            ]

        conty=0
        contx=0
        list_platforms = []
        for x in mapa:
            for coord in x:
                if coord==1:
                    list_platforms.append(((contx*50,conty*50),im_grass))
                if coord==2:
                    list_platforms.append(((contx*50,conty*50),im_dirt))            
                if coord==3:
                    list_platforms.append(((contx*50,conty*50),im_stone))
                if coord==4:
                    list_platforms.append(((contx*50,conty*50),im_grass2)) 
                contx=contx+1
            contx=0
            conty=conty+1
 
 
        # Go through the array above and add platforms
        for platform in list_platforms:
            block = levels.Platform(platform[0],platform[1])
            self.platform_list.add(block)

        im_e1 = "Source/Imatges/enemic1.png"
        im_e2 = "Source/Imatges/enemic2.png"
        #list_enemies = [((500, 400), im_e1, (2,3),"b")]
        list_enemies = [((760, 590), im_e1, (2,3),"b"), ((1490, 450), im_e2, (2,3), "r"), ((1750, 600), im_e1, (2,3), "b"), ((2120, 200), im_e2, (2,3), "r"), ((4700, 600), im_e2, (2,3), "r")]
        for e in list_enemies:
            im_e1_r = pygame.image.load(e[1]).convert_alpha()
            im_e1_l = pygame.transform.flip(im_e1_r, True, False)
            mat_im_e1_l = sprite_sheets.crea_matriu_imatges(im_e1_l, *e[2])
            mat_im_e1_r = sprite_sheets.crea_matriu_imatges(im_e1_r, *e[2])
            e1 = enemy1.Animacio(mat_im_e1_l, mat_im_e1_r, e[0], e[3])
            self.enemy_list.add(e1)


        
        bg1 = background.Background('Source/Imatges/fons1.png',15,-300)
        self.bg_list.add(bg1)
        bg2 = background.Background('Source/Imatges/fons2.png',10,-300)
        self.bg_list.add(bg2)
        bg3 = background.Background('Source/Imatges/fons3.png',8,-300)
        self.bg_list.add(bg3)
        bg4 = background.Background('Source/Imatges/fons4.png',3,-300)
        self.bg_list.add(bg4)
        bg5 = background.Background('Source/Imatges/fons5.png',1,-300)
        self.bg_list.add(bg5)
